service: testAssignar # NOTE: update this with your service name

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  role: DefaultRole
  stage: live
  region: ap-southeast-2
  environment:
      USER_DDB_TABLE: ${self:service}-${self:provider.stage}

package:
  exclude:
    - CurlTests/**

functions:
  hello:
    handler: testAssignar.hello
    events:
      - http:
          path: hello
          method: get

  login:
    handler: testAssignar.login
    events:
      - http:
          path: login
          method: post

resources:
  Resources:
    UserDDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        TableName: ${self:provider.environment.USER_DDB_TABLE}

    DefaultRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /testassignar/defaultrole/
        RoleName: testAssignarDefaultRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: testAssignarPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - cloudformation:DescribeChangeSet
                    - cloudformation:DescribeStackResources
                    - cloudformation:DescribeStacks
                    - cloudformation:GetTemplate
                    - cloudformation:ListStackResources
                    - cloudwatch:*
                    - cognito-identity:ListIdentityPools
                    - cognito-sync:GetCognitoEvents
                    - cognito-sync:SetCognitoEvents
                    - dynamodb:*
                    - ec2:DescribeSecurityGroups
                    - ec2:DescribeSubnets
                    - ec2:DescribeVpcs
                    - events:*
                    - iam:GetPolicy
                    - iam:GetPolicyVersion
                    - iam:GetRole
                    - iam:GetRolePolicy
                    - iam:ListAttachedRolePolicies
                    - iam:ListRolePolicies
                    - iam:ListRoles
                    - iam:PassRole
                    - iot:AttachPrincipalPolicy
                    - iot:AttachThingPrincipal
                    - iot:CreateKeysAndCertificate
                    - iot:CreatePolicy
                    - iot:CreateThing
                    - iot:CreateTopicRule
                    - iot:DescribeEndpoint
                    - iot:GetTopicRule
                    - iot:ListPolicies
                    - iot:ListThings
                    - iot:ListTopicRules
                    - iot:ReplaceTopicRule
                    - kinesis:DescribeStream
                    - kinesis:ListStreams
                    - kinesis:PutRecord
                    - kms:ListAliases
                    - lambda:*
                    - logs:*
                    - s3:*
                    - sns:ListSubscriptions
                    - sns:ListSubscriptionsByTopic
                    - sns:ListTopics
                    - sns:Publish
                    - sns:Subscribe
                    - sns:Unsubscribe
                    - sqs:ListQueues
                    - sqs:SendMessage
                    - tag:GetResources
                    - xray:PutTelemetryRecords
                    - xray:PutTraceSegments
                  Resource: '*'